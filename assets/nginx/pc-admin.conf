server {
  listen 443 ssl;
  server_name {{ .DOMAIN }};

  access_log /var/log/nginx/{{ .DOMAIN }}-access.log;
  error_log /var/log/nginx/{{ .DOMAIN }}-error.log;

  ssl_certificate /root/certimate/ssl/{{ .DOMAIN }}.pem;
  ssl_certificate_key /root/certimate/ssl/{{ .DOMAIN }}.key;

  root /usr/share/nginx/html/{{ .DOMAIN }};

  # SSL优化配置
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
  ssl_prefer_server_ciphers on;

  # 全局安全头
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header X-Content-Type-Options "nosniff";
  add_header X-Frame-Options "SAMEORIGIN";
  add_header Referrer-Policy "strict-origin-when-cross-origin";


  # 静态资源直接放行(不校验tsn)
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|json|woff2)$ {
     expires 1y;
     try_files $uri =404;
  }


  # index.html不缓存
  location = /index.html {
      add_header Cache-Control "no-store, no-cache, must-revalidate";
      root /usr/share/nginx/html/{{ .DOMAIN }};
      index index.html index.htm;
      try_files $uri $uri/ /index.html;
  }

  # api代理，用于解决跨域问题
  location ~ ^/(?<tsn>[^/]+)/api/(?<path>.*)$ {
    rewrite ^ /$path break;
    proxy_pass http://127.0.0.1:8000;
    proxy_set_header Host $host;
    proxy_set_header hd-tsn $tsn;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location ~ ^/([^/]+)(/.*)?$ {
    rewrite ^ /$1$2 break;
    try_files $uri $uri/ /index.html;
  }

  # 拒绝不带租户SN的访问
  location / {
    return 404;
  }

}
